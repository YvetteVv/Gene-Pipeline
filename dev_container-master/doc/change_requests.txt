------------------------------------------------------------------------------ 
Once software is placed in a controlled baseline, all changes are tracked. A
distinction must be made for the cause of a change. The change categories are:

Type 0: Critical failures, which are defects that are nearly always fixed 
before any external release. In general, these sorts of changes represent 
showstoppers that have an impact on the usability of the software in its
critical use cases.
 
Type 1: A bug or defect that either does not impair the usefulness of the 
system or can be worked around. Such errors tend to correlate with nuisances
in critical use cases or serious defects in secondary use cases that have a 
low probability of occurrence.

Type 2: A change that is an enhancement rather than a response to a defect.
Its purpose is typically to improve performance, testability, usability, or
some other aspect of quality that represents good value engineering.

Type 3: A change that is necessitated by an update to the requirements. This 
could be new features or capabilities that are outside the scope of the 
current vision and business case.

Type 4: Changes that are not accommodated by the other categories. 
------------------------------------------------------------------------------
DATE		
CHANGE	
PURPOSE	
TYPE			
REQUESTOR		
APPROVED BY		
APPROVAL DATE	
CHANGED BY  
CHANGE DATE 
FILES AFFECTED
COMMENT

DATE	06/04/2013
CHANGE	add config file deployment support
PURPOSE	to provide automated deployment of the deploy.cfg files when running make deploy
TYPE	1
REQUESTOR	Tom
APPROVED BY
APPROVAL DATE
CHANGED BY	Tom
CHANGE DATE
FILES AFFECTED	Makefile.common.rules
		Makefile.commom
		module.Makefile
COMMENT	The following changes are proposed.
	1) add a variable to the Makefile.common file called MK_CONFIG. This variable
	holds the name of the executable. For now, I'm working with a perl script based
	on Config::Simple and will check this in.
	2) add a target to Makefile.commom.rules called deploy-cfg. This target will
	execute the mkcfg program in the dev container tools dir on the modules 
	deploy.cfg file.
	3) add a dependency in the module.Makefile such that deploy-service is dependent
	on deploy-cfg.


Here is the user contributed perldoc for the mkcfg program in the dev_container tools 
directory:

NAME
       mkcfg

SYNOPSIS
       mkcfg deploy.cfg
       mkcfg -h, --help

DESCRIPTION
       The mkcfg command appends the module deploy.cfg file in the module top level directory to the
       deployment.cfg file in the deployment top level directory directory.

       The deployment directory is specified by the $TARGET environment variable.

       If neither file exists, then an empty deployment.cfg file is created.

       If deploy.cfg exists but not deployment.cfg, then a deployment.cfg is created that contains the contents
       of deploy.cfg.

       If deployment.cfg exists but not deploy.cfg, then deployment.cfg remains unchanged, but due to the write a
       new timestamp on the file will occur.

       If both files exist, a merge of the files will be attempted, and as long as there are no conflicts between
       the values of a given key in a given block the merge will succeed and a new deployment.cfg file will be
       written.

       If both files exist and there is a conflict between the values of a given key in a given block, the
       program will issue a warning and keep the global setting.

       No order is assumed on the blocks in the output file.

       If the deployment.cfg exists, under all cases a deployment.cfg.bak file will be created as a backup.

COMMAND-LINE OPTIONS
       -h, --help  This documentation

AUTHORS
       Thomas Brettin Shane Canon Dan Olson




DATE	05/14/2013
CHANGE	Add java class path and java home and catalina home env variables to user-env.sh
PURPOSE	To allow for correct envorinment settings in the deployment environment
TYPE	3
REQUESTOR	Guru
APPROVED BY	Tom
APPROVAL DATE	05/14/2013
CHANGED BY	Guru
CHANGE DATE	05/14/2013
FILES AFFECTED	dev_container/Makefile
		$TARGET/user-env.sh
		$TARGET/user-env.csh
COMMENT

DATE	04/01/2013
CHANGE	Create template directory in dev_container top dir and
put the start_service.tt, stop_service.tt, process.tt and 
module.Makefile in this directory.	
PURPOSE	To further automate the construction of a service module.
TYPE	2
REQUESTOR	Tom
APPROVED BY
APPROVAL DATE
CHANGED BY	Tom
CHANGE DATE	04/01/2013
FILES AFFECTED	dev_container top dir, start_service.tt, stop_service.tt,
process.tt, module.Makefile
COMMENT	These files would be moved to a new directory in TOP_DIR called
template. These files would be used by the kb_create_service_module.pl
script in dev_container_tools. The start_service.tt, stop_service.tt
and process_service.tt would be placed under version control in the
dev_container repo.

DATE	03/19/2013
CHANGE	Add targets for creating distributions
PURPOSE	To support conventional mechanisms for distributing source code.
TYPE	3
REQUESTOR	Tom
APPROVED BY
APPROVAL DATE
CHANGED BY
CHANGE DATE
FILES AFFECTED	module.Makefile, all current module Makefiles
COMMENT	If approved, the following code would be added to the module.Makefile
and a foreach loop would be run over all module directories appending this code
to the end of the module Makefile. Module owners are responsible for implementing
the targets. Standard implementaiton designs will be provided in the near future.
#
# Distribution Section
#
# This section deals with the packaging of source code into a
# distributable form. This is different from a deployable form
# as our deployments tend to be kbase specific. To create a
# distribution, we have to consider the distribution mechanisms.
# For starters, we will consider cpan style packages for perl
# code, we will consider egg for python, npm for javascript,
# and it is not clear at this time what is right for java.

dist: dist-cpan dist-egg dist-npm dist-java

dist-cpan: dist-cpan-client dist-cpan-service

dist-egg: dist-egg-client dist-egg-service

dist-npm: dist-nmp-client dist-npm-service

dist-java: dist-java-client dist-java-service

dist-cpan-client:
        echo "cpan client distribution not supported"

dist-cpan-service:
        echo "cpan service distribution not supported"

dist-egg-client:
        echo "egg client distribution not supported"

dist-egg-service:
        echo "egg service distribution not supported"

dist-npm-client:
        echo "npm client distribution not supported"

dist-npm-service:
        echo "npm service distribution not supported"

dist-java-client:
        echo "java client distribution not supported"

dist-java-service:
        echo "java service distribuiton not supported"




DATE		01/16/2013
CHANGE		Copy everything under the module's lib directory to 
		the deployment's lib directory as part of the
		deploy-libs target
PURPOSE		To allow make deploy to deploy libs
TYPE		0
REQUESTOR	Tom
APPROVED BY	Dan
APPROVAL DATE	01/16/2013
CHANGED BY	Tom
CHANGE DATE	01/16/2013
FILES AFFECTED	module.Makefile
COMMENT		Add the command cp -r lib $(TARGET)/ to the deploy-libs 
		target. I'm not very happy with this as it has the potential
		to deploy files under the module's lib directory that 
		shouldn't get deployed. For example:

                  ServiceRegistryImpl.pm.bak-2013-01-16-14-17-01
                  ServiceRegistryImpl.pm.bak-2013-01-16-14-18-57

		get copied over and are the product of running the type
		compiler more than once.

DATE		01/16/2013
CHANGE		Create webroot directory if it doesn't exist in deploy-docs
PURPOSE		To allow make deploy to deploy-docs
TYPE		0
REQUESTOR	Tom
APPROVED BY	Dan
APPROVAL DATE	01/16/2013
CHANGED BY	Tom
CHANGE DATE	01/16/2013
FILES AFFECTED	module.Makefile
COMMENT		Add -mkdir -p $(TARGET)/services/$(SERVICE_NAME)/webroot
		to the deploy-docs target. This command the following behaviour.
		The - tells make to ignore any errors from the mkdir command.
		This is important in the event that the directory already exists.
		The -p flag tells mkdir to create any parent directories as needed.

DATE            01/09/2013
CHANGE          Move module.Makefile from dev_container_tools repository
                to the dev_container repository's doc directory.
PURPOSE         To make the module.Makefile easier to find.
TYPE            2      
REQUESTOR       Tom    
APPROVED BY     Bob (module owner)
APPROVAL DATE	01/08/2013
CHANGED BY	Tom
CHANGE DATE	01/09/2013
FILES AFFECTED	module.Makefile
		dev_container_tools git repository
		dev_container git repository	
COMMENT		Move module.Makefile from dev_container_tools/scripts
		directory to dev_container/doc

